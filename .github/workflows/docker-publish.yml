name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ master ]

env:
  DOCKER_NAMESPACE: rurusachi
  IMAGE_NAME: react-mini-twit-frontend


jobs:
  # 1st Job
  Build-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2        
      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install          
      # build the app
      - name: build
        run: |
          npm run build
          
  # 2nd Job    
  Push-new-image-to-Docker:
    runs-on: ubuntu-latest
    steps:
      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.DOCKER_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # 3rd Job
  Update-docker-compose:
    needs: Push-new-image-to-Docker
    uses: DEV-OPS-Group-b/deployment/.github/workflows/docker-compose.yml@main
    secrets:
      HOST: ${{ secrets.VM_HOST }}
      USERNAME: ${{ secrets.VM_USERNAME }}
      KEY: ${{ secrets.VM_KEY }}
          
